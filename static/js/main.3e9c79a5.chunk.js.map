{"version":3,"sources":["components/Exercises/Form.js","components/Exercises/Create.js","components/Layout/Header.js","components/Layout/Footer.js","components/Exercises/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["initialExerciseState","title","description","muscles","id","withStyles","theme","button","margin","spacing","unit","props","classes","exercise","open","setOpen","editMode","onCreateExercise","onSaveEdit","_useState","useState","_useState2","Object","slicedToArray","exerciseInfo","setExercise","useEffect","handleChange","event","identifier","objectSpread","target","name","key","value","disableButton","react_default","a","createElement","FormControl_default","required","fullWidth","TextField_default","label","onChange","InputLabel_default","Select_default","map","category","MenuItem_default","FormHelperText_default","multiline","rows","Button_default","className","variant","onClick","color","disabled","Fragment","currExercise","toLowerCase","replace","Create","isOpen","Fab_default","size","Add_default","Dialog_default","onClose","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","Form","DialogActions_default","root","flexGrow","grow","menuButton","marginLeft","marginRight","AppBar_default","position","Toolbar_default","Typography_default","withWidth","_ref","onSelect","width","index","findIndex","elem","Tabs_default","indicatorColor","textColor","centered","Tab_default","style","textTransform","muscle","_Paper","Paper","padding","overflowY","defineProperty","breakpoints","up","height","down","html, body, #root","exercises","onDelete","onEdit","onCreate","onEditSelect","setEditMode","_exercise$title","_exercise$description","index_es","container","Container","item","xs","sm","_ref2","_ref3","group","component","_ref4","itemSelected","primary","deleteSelected","Delete_default","editSelected","Edit_default","marginTop","content","textAlign","palette","text","secondary","selectedCategory","setSelectedCategory","_useState3","_useState4","selectedExerciseId","setSelectedExerciseId","_useState5","_useState6","allExercises","setAllExercises","onCreateExerciseHandler","updatedExerciseList","concat","toConsumableArray","formattedExerciseList","initialExercises","reduce","acc","curr","entries","formattedExercises","CssBaseline_default","Header","Exercises","updatedList","filter","exercisesNotBeingEdited","ex","find","Footer","Boolean","window","location","hostname","match","createMuiTheme","indigo","blue","typography","useNextVariants","ReactDOM","render","core_styles","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"siBAUMA,EAAuB,CAC3BC,MAAO,GACPC,YAAa,GACbC,QAAS,GACTC,GAAI,IAkISC,uBA/HA,SAAAC,GAAK,MAAK,CACvBC,OAAQ,CACNC,OAAQF,EAAMG,QAAQC,QA6HXL,CAzHF,SAAAM,GAAS,IAElBC,EAQED,EARFC,QACAC,EAOEF,EAPFE,SACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,QACAC,EAIEL,EAJFK,SACAC,EAGEN,EAHFM,iBACAC,EAEEP,EAFFO,WACAf,EACEQ,EADFR,QATkBgB,EAYgBC,mBAASpB,GAZzBqB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAYbK,EAZaH,EAAA,GAYCI,EAZDJ,EAAA,GAepBK,oBAAU,WACDD,EAAPX,EAAmBd,EAAoCa,IACtD,CAACA,EAAUC,IAGd,IAAMa,EAAe,SAACC,EAAOC,GAC3B,IAAMhB,EAAQS,OAAAQ,EAAA,EAAAR,CAAA,GAAQE,GAGjBX,EAASe,EAAMG,OAAOC,MAD3BH,EACmCA,EAAWI,IACXL,EAAMG,OAAOG,MAEhDT,EAAYZ,IAmBRsB,GAAiBX,EAAavB,QAAUuB,EAAarB,QAE3D,OACEiC,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAa7B,OAAO,SAASgC,UAAQ,EAACC,WAAS,GAC7CL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEL,KAAK,QACLW,MAAM,QACNC,SAAUjB,EACVnB,OAAO,SACP0B,MAAOV,EAAavB,SAGxBmC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAa7B,OAAO,SAASgC,UAAQ,EAACC,WAAS,GAC7CL,EAAAC,EAAAC,cAACO,EAAAR,EAAD,qBACAD,EAAAC,EAAAC,cAACQ,EAAAT,EAAD,CACEH,MAAOV,EAAarB,QACpB6B,KAAK,UACLY,SAAUjB,GAETxB,EAAQ4C,IAAI,SAAAC,GAAQ,OACnBZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAUJ,IAAKe,EAAUd,MAAOc,GAC7BA,MAIPZ,EAAAC,EAAAC,cAACY,EAAAb,EAAD,kBAEFD,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAa7B,OAAO,SAASgC,UAAQ,EAACC,WAAS,GAC7CL,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACEL,KAAK,cACLW,MAAM,cACNQ,WAAS,EACTC,KAAM,EACNR,SAAUjB,EACVnB,OAAO,SACP0B,MAAOV,EAAatB,eAIvBc,EACCoB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,UAAW1C,EAAQL,OACnBgD,QAAQ,YACRC,QAAS,WA/CftC,EAAWM,IAgDLiC,MAAM,YACNC,SAAUvB,GALZ,QAUAC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,UAAW1C,EAAQL,OACnBgD,QAAQ,YACRC,QAAS,kBAAMzC,GAAQ,IACvB0C,MAAM,aAJR,UAQArB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,UAAW1C,EAAQL,OACnBgD,QAAQ,YACRC,QA/EgB,WACxB,IAAMI,EAAYtC,OAAAQ,EAAA,EAAAR,CAAA,GACbE,EADa,CAEhBpB,GAAIoB,EAAavB,MAAM4D,cAAcC,QAAQ,KAAM,OAErD7C,EAAiB2C,GAGjBnC,EAAYzB,GACZe,GAAQ,IAuEA0C,MAAM,YACNC,SAAUvB,GALZ,WCrHK4B,EAAA,SAAApD,GAAS,IACdR,EAA8BQ,EAA9BR,QAASc,EAAqBN,EAArBM,iBADKE,EAEIC,oBAAS,GAFbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEf6C,EAFe3C,EAAA,GAEPN,EAFOM,EAAA,GAGtB,OACEe,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAKoB,MAAM,YAAYS,KAAK,SAASV,QAAS,kBAAMzC,GAAQ,KAC1DqB,EAAAC,EAAAC,cAAC6B,EAAA9B,EAAD,OAEFD,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEvB,KAAMkD,EACNK,QAAS,kBAAMtD,GAAQ,IACvBuD,kBAAgB,qBAEhBlC,EAAAC,EAAAC,cAACiC,EAAAlC,EAAD,CAAajC,GAAG,qBAAhB,uBACAgC,EAAAC,EAAAC,cAACkC,EAAAnC,EAAD,KACED,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,iCACAD,EAAAC,EAAAC,cAACoC,EAAD,CACEzD,iBAAkBA,EAClBF,QAASA,EACTD,MAAI,EACJX,QAASA,KAGbiC,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,SCIOhC,uBA/BA,CACbuE,KAAM,CACJC,SAAU,GAEZC,KAAM,CACJD,SAAU,GAEZE,WAAY,CACVC,YAAa,GACbC,YAAa,KAsBF5E,CAlBA,SAAAM,GAAS,IACdC,EAA8BD,EAA9BC,QAASK,EAAqBN,EAArBM,iBAEjB,OACEmB,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQ8C,SAAS,UACf/C,EAAAC,EAAAC,cAAC8C,EAAA/C,EAAD,KACED,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CAAYkB,QAAQ,KAAKE,MAAM,UAAUH,UAAW1C,EAAQkE,MAA5D,YAGA1C,EAAAC,EAAAC,cAACyB,EAAD,CACE5D,QAASQ,EAAMR,QACfc,iBAAkBA,sDCqBbqE,eA9CA,SAAAC,GAA4C,IAAzCpF,EAAyCoF,EAAzCpF,QAAS6C,EAAgCuC,EAAhCvC,SAAUwC,EAAsBD,EAAtBC,SAAUC,EAAYF,EAAZE,MACvCC,EAAQ1C,EAAW7C,EAAQwF,UAAU,SAAAC,GAAI,OAAIA,IAAS5C,IAAY,EAAI,EAK5E,OACEZ,EAAAC,EAAAC,cAAC4C,EAAA7C,EAAD,CAAQ8C,SAAS,UACf/C,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CACEO,SAPgB,SAAChB,EAAO8D,GAC5BF,EAAmB,IAAVE,EAAc,GAAKvF,EAAQuF,EAAQ,KAOxCxD,MAAOwD,EACPI,eAAe,YACfC,UAAU,YACVC,SAAoB,OAAVP,EACVlC,QAAmB,OAAVkC,EAAiB,aAAe,YAEzCrD,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,CACEM,MACEP,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEkB,QAAQ,YACR2C,MAAO,CAAEC,cAAe,eAF1B,SAQHhG,EAAQ4C,IAAI,SAAAqD,GACX,OACEhE,EAAAC,EAAAC,cAAC2D,GAAA5D,EAAD,CACEJ,IAAKmE,EACLzD,MACEP,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEkB,QAAQ,YACR2C,MAAO,CAAEC,cAAe,eAEvBC,8DCFJ/F,wBArBA,SAAAC,GAAK,IAAA+F,EAAA,MAAK,CACvBC,OAAKD,EAAA,CACHE,QAA8B,EAArBjG,EAAMG,QAAQC,KACvB8F,UAAW,QAFRlF,OAAAmF,EAAA,EAAAnF,CAAA+E,EAGF/F,EAAMoG,YAAYC,GAAG,MAAQ,CAC5BC,OAAQ,8BAJPtF,OAAAmF,EAAA,EAAAnF,CAAA+E,EAMF/F,EAAMoG,YAAYG,KAAK,MAAQ,CAC9BD,OAAQ,6BAPPtF,OAAAmF,EAAA,EAAAnF,CAAA+E,EASH,UAAW,CACTS,oBAAqB,CACnBF,OAAQ,UAXTtF,OAAAmF,EAAA,EAAAnF,CAAA+E,EAAA,YAcQ,CACTO,OAAQ,SAfPP,KAoBQhG,CACb,SAAAkF,GAWM,IAVJ3E,EAUI2E,EAVJ3E,QACAmG,EASIxB,EATJwB,UACA/D,EAQIuC,EARJvC,SACAwC,EAOID,EAPJC,SACAwB,EAMIzB,EANJyB,SACAC,EAKI1B,EALJ0B,OACA9G,EAIIoF,EAJJpF,QACA+G,EAGI3B,EAHJ2B,SACAC,EAEI5B,EAFJ4B,aACAtG,EACI0E,EADJ1E,SACIM,EAC4BC,oBAAS,GADrCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACGH,EADHK,EAAA,GACa+F,EADb/F,EAAA,GAAAgG,EA2BAxG,EAFFZ,aAzBE,IAAAoH,EAyBM,WAzBNA,EAAAC,EA2BAzG,EADFX,mBA1BE,IAAAoH,EA0BY,yCA1BZA,EA6BJ,OACElF,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAMC,WAAS,EAAClE,UAAW1C,EAAQ6G,WACjCrF,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GAErBxF,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAOjE,UAAW1C,EAAQ0F,OACvBS,EAAUhE,IAAI,SAAA8E,GAAwB,IAAAC,EAAAxG,OAAAC,EAAA,EAAAD,CAAAuG,EAAA,GAAtBE,EAAsBD,EAAA,GAAff,EAAee,EAAA,GACrC,OAAQ9E,GAAYA,IAAa+E,EA8B7B,KA7BF3F,EAAAC,EAAAC,cAAA,OAAKL,IAAK8F,GACR3F,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CACEhE,QAAQ,KACR2C,MAAO,CAAEC,cAAe,eAEvB4B,GAEH3F,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAMS,UAAU,MACbjB,EAAUhE,IAAI,SAAAkF,GAAmB,IAAhBhI,EAAgBgI,EAAhBhI,MAAOG,EAAS6H,EAAT7H,GACvB,OACEgC,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CACE/D,QAAS,kBA5BV,SAAApD,GACnBoF,EAASpF,GACTgH,GAAY,GA0BuBc,CAAa9H,IAC5B6B,IAAKhC,EACLM,QAAM,GAEN6B,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAcY,QAASlI,IACvBmC,EAAAC,EAAAC,cAACiF,GAAA,EAAD,KACEnF,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAY/D,QAAS,kBAxCtB,SAAApD,GACrB4G,EAAS5G,GAELS,EAAST,KAAOA,GAAIgH,GAAY,GAqCagB,CAAehI,KACxCgC,EAAAC,EAAAC,cAAC+F,GAAAhG,EAAD,OAEFD,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAY/D,QAAS,kBAhDxB,SAAApD,GACnB+G,EAAa/G,GACbgH,GAAY,GA8CqCkB,CAAalI,KACtCgC,EAAAC,EAAAC,cAACiG,GAAAlG,EAAD,iBAYtBD,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrBxF,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAOjE,UAAW1C,EAAQ0F,OACvBtF,EACCoB,EAAAC,EAAAC,cAACoC,EAAD,CACE1D,UAAQ,EACRoG,YAAaA,EACbvG,SAAUA,EACVqG,SAAUA,EACVhG,WA1EK,SAAAd,GACfgH,GAAY,GAEZH,EAAO7G,IAwEGD,QAASA,IAGXiC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsB,SAAA,KACEvB,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAYhE,QAAQ,MAAMtD,GAC1BmC,EAAAC,EAAAC,cAACiF,GAAA,EAAD,CAAYhE,QAAQ,aAAarD,SCvIpCC,GAAU,CAAC,YAAa,QAAS,OAAQ,OAAQ,QAEjD4G,GAAY,CACvB,CACE3G,GAAI,iBACJH,MAAO,iBACPC,YAAa,oBACbC,QAAS,aAEX,CACEC,GAAI,OACJH,MAAO,OACPC,YAAa,sBACbC,QAAS,QAEX,CACEC,GAAI,gBACJH,MAAO,gBACPC,YAAa,qBACbC,QAAS,QAEX,CACEC,GAAI,cACJH,MAAO,cACPC,YAAa,oBACbC,QAAS,SAEX,CACEC,GAAI,WACJH,MAAO,WACPC,YAAa,8BACbC,QAAS,QAEX,CACEC,GAAI,YACJH,MAAO,YACPC,YAAa,2BACbC,QAAS,QAEX,CACEC,GAAI,SACJH,MAAO,SACPC,YAAa,mBACbC,QAAS,SCqEEE,wBAzGA,SAAAC,GAAK,MAAK,CACvBsE,KAAM,CACJC,SAAU,EACV2D,UAAW,QAEbC,QAAS,CACPlC,QAA8B,EAArBjG,EAAMG,QAAQC,KACvBgI,UAAW,SACXlI,OAA6B,EAArBF,EAAMG,QAAQC,KACtB+C,MAAOnD,EAAMqI,QAAQC,KAAKC,aAgGfxI,CAzEH,SAAAM,GAAS,IAUCP,EAVDe,EAE6BC,mBAAS,IAFtCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEZ2H,EAFYzH,EAAA,GAEM0H,EAFN1H,EAAA,GAAA2H,EAGiC5H,mBAAS,IAH1C6H,EAAA3H,OAAAC,EAAA,EAAAD,CAAA0H,EAAA,GAGZE,EAHYD,EAAA,GAGQE,EAHRF,EAAA,GAAAG,EAKqBhI,mBAAS2F,IAL9BsC,EAAA/H,OAAAC,EAAA,EAAAD,CAAA8H,EAAA,GAKZE,EALYD,EAAA,GAKEE,EALFF,EAAA,GAyBbG,EAA0B,SAAA3I,GAC9B,IAAM4I,EAAmB,GAAAC,OAAApI,OAAAqI,EAAA,EAAArI,CAAOgI,GAAP,CAAqBzI,IAE9C0I,EAAgBE,IAkBZG,EAjEmB,SAAA7C,GAIzB,IAAM8C,EAAmB1J,GAAQ2J,OAAO,SAACC,EAAKC,GAC5C,OAAO1I,OAAAQ,EAAA,EAAAR,CAAA,GAAKyI,EAAZzI,OAAAmF,EAAA,EAAAnF,CAAA,GAAkB0I,EAAO,MACxB,IAEH,OAAO1I,OAAO2I,QACZlD,EAAU+C,OAAO,SAAC/C,EAAWlG,GAAa,IAChCV,EAAYU,EAAZV,QAIR,OAFA4G,EAAU5G,GAAV,GAAAuJ,OAAApI,OAAAqI,EAAA,EAAArI,CAAyByF,EAAU5G,IAAnC,CAA6CU,IAEtCkG,GACN8C,IAkDyBK,CAAmBZ,GAEjD,OACElH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6H,EAAA9H,EAAD,MACAD,EAAAC,EAAAC,cAAC8H,EAAD,CAAQjK,QAASA,GAASc,iBAAkBuI,IAC5CpH,EAAAC,EAAAC,cAAC+H,GAAD,CACElK,QAASA,GACT6G,SAxCwB,SAAA5G,GAE5B,IAAMkK,EAAchB,EAAaiB,OAAO,SAAA3E,GACtC,OAAOA,EAAKxF,KAAOA,IAIjBA,IAAO8I,GAAoBC,EAAsB,IACrDI,EAAgBe,IAiCZnD,aAxB4B,SAAA/G,GAChC+I,EAAsB/I,IAwBlB6G,OArBgB,SAAApG,GAEpB,IAAM2J,EAA0BlB,EAAaiB,OAAO,SAAAE,GAClD,OAAOA,EAAGrK,KAAOS,EAAST,KAK5BmJ,EAAe,GAAAG,OAAApI,OAAAqI,EAAA,EAAArI,CAAKkJ,GAAL,CAA8B3J,MAczCqG,SAAUsC,EACV3I,SAAUqI,GAhDI9I,EAgD6B8I,EA/CxCI,EAAaoB,KAAK,SAAA7J,GAAQ,OAAIA,EAAST,KAAOA,KA+CgB,GACjEoF,SAAU2D,EACVnG,SAAU8F,EACV/B,UAAW6C,IAGbxH,EAAAC,EAAAC,cAACqI,GAAD,CACExK,QAASA,GACT6C,SAAU8F,EACVtD,SAAUuD,OC9FE6B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,wECVA1K,GAAQ2K,yBAAe,CAC3BtC,QAAS,CACPR,QAAS+C,UACTrC,UAAWsC,SAEbC,WAAY,CACVC,iBAAiB,KAIrBC,IAASC,OACPnJ,EAAAC,EAAAC,cAACkJ,EAAA,iBAAD,CAAkBlL,MAAOA,IACvB8B,EAAAC,EAAAC,cAACmJ,GAAD,OAEFC,SAASC,eAAe,SD2GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3e9c79a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst initialExerciseState = {\r\n  title: \"\",\r\n  description: \"\",\r\n  muscles: \"\",\r\n  id: \"\"\r\n};\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit\r\n  }\r\n});\r\n\r\nconst form = props => {\r\n  const {\r\n    classes,\r\n    exercise,\r\n    open,\r\n    setOpen,\r\n    editMode,\r\n    onCreateExercise,\r\n    onSaveEdit,\r\n    muscles\r\n  } = props;\r\n\r\n  const [exerciseInfo, setExercise] = useState(initialExerciseState);\r\n\r\n  // updates form when editing\r\n  useEffect(() => {\r\n    open ? setExercise(initialExerciseState) : setExercise(exercise);\r\n  }, [exercise, open]);\r\n\r\n  // identifier for the \"select\" component\r\n  const handleChange = (event, identifier) => {\r\n    const exercise = { ...exerciseInfo };\r\n\r\n    identifier\r\n      ? (exercise[event.target.name] = identifier.key)\r\n      : (exercise[event.target.name] = event.target.value);\r\n\r\n    setExercise(exercise);\r\n  };\r\n\r\n  const handleModalSubmit = () => {\r\n    const currExercise = {\r\n      ...exerciseInfo,\r\n      id: exerciseInfo.title.toLowerCase().replace(/ /g, \"-\")\r\n    };\r\n    onCreateExercise(currExercise);\r\n\r\n    // close modal and set exercise state to initial state\r\n    setExercise(initialExerciseState);\r\n    setOpen(false);\r\n  };\r\n\r\n  const saveEdit = () => {\r\n    onSaveEdit(exerciseInfo);\r\n  };\r\n\r\n  const disableButton = !exerciseInfo.title || !exerciseInfo.muscles;\r\n\r\n  return (\r\n    <form>\r\n      <FormControl margin=\"normal\" required fullWidth>\r\n        <TextField\r\n          name=\"title\"\r\n          label=\"Title\"\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          value={exerciseInfo.title}\r\n        />\r\n      </FormControl>\r\n      <FormControl margin=\"normal\" required fullWidth>\r\n        <InputLabel>Muscle group</InputLabel>\r\n        <Select\r\n          value={exerciseInfo.muscles}\r\n          name=\"muscles\"\r\n          onChange={handleChange}\r\n        >\r\n          {muscles.map(category => (\r\n            <MenuItem key={category} value={category}>\r\n              {category}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n        <FormHelperText>Required</FormHelperText>\r\n      </FormControl>\r\n      <FormControl margin=\"normal\" required fullWidth>\r\n        <TextField\r\n          name=\"description\"\r\n          label=\"Description\"\r\n          multiline\r\n          rows={4}\r\n          onChange={handleChange}\r\n          margin=\"normal\"\r\n          value={exerciseInfo.description}\r\n        />\r\n      </FormControl>\r\n\r\n      {editMode ? (\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          onClick={() => saveEdit()}\r\n          color=\"secondary\"\r\n          disabled={disableButton}\r\n        >\r\n          Save\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            onClick={() => setOpen(false)}\r\n            color=\"secondary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            onClick={handleModalSubmit}\r\n            color=\"secondary\"\r\n            disabled={disableButton}\r\n          >\r\n            Add\r\n          </Button>\r\n        </>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(form);\r\n","import React, { useState } from \"react\";\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Add from \"@material-ui/icons/Add\";\r\n\r\nimport Form from \"./Form\";\r\n\r\nexport default props => {\r\n  const { muscles, onCreateExercise } = props;\r\n  const [isOpen, setOpen] = useState(false);\r\n  return (\r\n    <div>\r\n      <Fab color=\"secondary\" size=\"medium\" onClick={() => setOpen(true)}>\r\n        <Add />\r\n      </Fab>\r\n      <Dialog\r\n        open={isOpen}\r\n        onClose={() => setOpen(false)}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Create new exercise</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>Fill out the form below.</DialogContentText>\r\n          <Form\r\n            onCreateExercise={onCreateExercise}\r\n            setOpen={setOpen}\r\n            open\r\n            muscles={muscles}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport CreateDialog from \"../Exercises/Create\";\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  }\r\n};\r\n\r\nconst header = props => {\r\n  const { classes, onCreateExercise } = props;\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\r\n          Workouts\r\n        </Typography>\r\n        <CreateDialog\r\n          muscles={props.muscles}\r\n          onCreateExercise={onCreateExercise}\r\n        />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(header);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport withWidth from \"@material-ui/core/withWidth\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst footer = ({ muscles, category, onSelect, width }) => {\r\n  const index = category ? muscles.findIndex(elem => elem === category) + 1 : 0;\r\n  const onIndexSelect = (event, index) => {\r\n    onSelect(index === 0 ? \"\" : muscles[index - 1]);\r\n  };\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Tabs\r\n        onChange={onIndexSelect}\r\n        value={index}\r\n        indicatorColor=\"secondary\"\r\n        textColor=\"secondary\"\r\n        centered={width !== \"xs\"}\r\n        variant={width === \"xs\" ? \"scrollable\" : \"standard\"}\r\n      >\r\n        <Tab\r\n          label={\r\n            <Typography\r\n              variant=\"subtitle1\"\r\n              style={{ textTransform: \"capitalize\" }}\r\n            >\r\n              All\r\n            </Typography>\r\n          }\r\n        />\r\n        {muscles.map(muscle => {\r\n          return (\r\n            <Tab\r\n              key={muscle}\r\n              label={\r\n                <Typography\r\n                  variant=\"subtitle1\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {muscle}\r\n                </Typography>\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </Tabs>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default withWidth()(footer);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  IconButton\r\n} from \"@material-ui/core\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\n\r\nimport Form from \"./Form\";\r\n\r\nconst styles = theme => ({\r\n  Paper: {\r\n    padding: theme.spacing.unit * 2,\r\n    overflowY: \"auto\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      height: \"calc(100vh - 64px - 48px)\"\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"calc(50vh - 28px - 24px)\"\r\n    },\r\n    \"@global\": {\r\n      \"html, body, #root\": {\r\n        height: \"100%\"\r\n      }\r\n    },\r\n    Container: {\r\n      height: \"100%\"\r\n    }\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(\r\n  ({\r\n    classes,\r\n    exercises,\r\n    category,\r\n    onSelect,\r\n    onDelete,\r\n    onEdit,\r\n    muscles,\r\n    onCreate,\r\n    onEditSelect,\r\n    exercise\r\n  }) => {\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    const saveEdit = id => {\r\n      setEditMode(false);\r\n\r\n      onEdit(id);\r\n    };\r\n    const editSelected = id => {\r\n      onEditSelect(id);\r\n      setEditMode(true);\r\n    };\r\n\r\n    const deleteSelected = id => {\r\n      onDelete(id);\r\n\r\n      if (exercise.id === id) setEditMode(false);\r\n    };\r\n\r\n    const itemSelected = id => {\r\n      onSelect(id);\r\n      setEditMode(false);\r\n    };\r\n\r\n    const {\r\n      title = \"Welcome!\",\r\n      description = \"Please select an exercise on the left.\"\r\n    } = exercise;\r\n\r\n    return (\r\n      <Grid container className={classes.Container}>\r\n        <Grid item xs={12} sm={6}>\r\n          {/* <LeftPane styles={styles} /> */}\r\n          <Paper className={classes.Paper}>\r\n            {exercises.map(([group, exercises]) => {\r\n              return !category || category === group ? (\r\n                <div key={group}>\r\n                  <Typography\r\n                    variant=\"h5\"\r\n                    style={{ textTransform: \"capitalize\" }}\r\n                  >\r\n                    {group}\r\n                  </Typography>\r\n                  <List component=\"ul\">\r\n                    {exercises.map(({ title, id }) => {\r\n                      return (\r\n                        <ListItem\r\n                          onClick={() => itemSelected(id)}\r\n                          key={title}\r\n                          button\r\n                        >\r\n                          <ListItemText primary={title} />\r\n                          <ListItemSecondaryAction>\r\n                            <IconButton onClick={() => deleteSelected(id)}>\r\n                              <Delete />\r\n                            </IconButton>\r\n                            <IconButton onClick={() => editSelected(id)}>\r\n                              <Edit />\r\n                            </IconButton>\r\n                          </ListItemSecondaryAction>\r\n                        </ListItem>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </div>\r\n              ) : null;\r\n            })}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Paper className={classes.Paper}>\r\n            {editMode ? (\r\n              <Form\r\n                editMode\r\n                setEditMode={setEditMode}\r\n                exercise={exercise}\r\n                onCreate={onCreate}\r\n                onSaveEdit={saveEdit}\r\n                muscles={muscles}\r\n              />\r\n            ) : (\r\n              <>\r\n                <Typography variant=\"h4\">{title}</Typography>\r\n                <Typography variant=\"subtitle1\">{description}</Typography>\r\n              </>\r\n            )}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n);\r\n","export const muscles = [\"shoulders\", \"chest\", \"arms\", \"back\", \"legs\"];\r\n\r\nexport const exercises = [\r\n  {\r\n    id: \"overhead-press\",\r\n    title: \"Overhead Press\",\r\n    description: \"Delts exercise...\",\r\n    muscles: \"shoulders\"\r\n  },\r\n  {\r\n    id: \"dips\",\r\n    title: \"Dips\",\r\n    description: \"Triceps exercise...\",\r\n    muscles: \"arms\"\r\n  },\r\n  {\r\n    id: \"barbell-curls\",\r\n    title: \"Barbell Curls\",\r\n    description: \"Biceps exercise...\",\r\n    muscles: \"arms\"\r\n  },\r\n  {\r\n    id: \"bench-press\",\r\n    title: \"Bench Press\",\r\n    description: \"Chest exercise...\",\r\n    muscles: \"chest\"\r\n  },\r\n  {\r\n    id: \"pull-ups\",\r\n    title: \"Pull Ups\",\r\n    description: \"Back and biceps exercise...\",\r\n    muscles: \"back\"\r\n  },\r\n  {\r\n    id: \"deadlifts\",\r\n    title: \"Deadlifts\",\r\n    description: \"Back and leg exercise...\",\r\n    muscles: \"back\"\r\n  },\r\n  {\r\n    id: \"squats\",\r\n    title: \"Squats\",\r\n    description: \"Legs exercise...\",\r\n    muscles: \"legs\"\r\n  }\r\n];\r\n","import React, { useState } from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Header, Footer } from \"./components/Layout/\";\r\nimport Exercises from \"./components/Exercises/\";\r\nimport { muscles, exercises } from \"./store\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: \"10px\"\r\n  },\r\n  content: {\r\n    padding: theme.spacing.unit * 2,\r\n    textAlign: \"center\",\r\n    margin: theme.spacing.unit * 2,\r\n    color: theme.palette.text.secondary\r\n  }\r\n});\r\n\r\nconst formattedExercises = exercises => {\r\n  // create an array of arrays\r\n  // key is a muscle group and value is an array\r\n  // of exercises for that muscle\r\n  const initialExercises = muscles.reduce((acc, curr) => {\r\n    return { ...acc, [curr]: [] };\r\n  }, {});\r\n\r\n  return Object.entries(\r\n    exercises.reduce((exercises, exercise) => {\r\n      const { muscles } = exercise;\r\n\r\n      exercises[muscles] = [...exercises[muscles], exercise];\r\n\r\n      return exercises;\r\n    }, initialExercises)\r\n  );\r\n};\r\n\r\nconst app = props => {\r\n\r\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n  const [selectedExerciseId, setSelectedExerciseId] = useState(\"\");\r\n\r\n  const [allExercises, setAllExercises] = useState(exercises);\r\n\r\n  // const allExercises = getExercises(exercises);\r\n  // console.log(allExercises);\r\n\r\n  const getExercise = id => {\r\n    return allExercises.find(exercise => exercise.id === id);\r\n  };\r\n\r\n  const deleteExerciseHandler = id => {\r\n    // get the id\r\n    const updatedList = allExercises.filter(elem => {\r\n      return elem.id !== id;\r\n    });\r\n\r\n    // reset selectedExerciseId\r\n    if (id === selectedExerciseId) setSelectedExerciseId(\"\");\r\n    setAllExercises(updatedList);\r\n  };\r\n\r\n  const onCreateExerciseHandler = exercise => {\r\n    const updatedExerciseList = [...allExercises, exercise];\r\n\r\n    setAllExercises(updatedExerciseList);\r\n  };\r\n\r\n  const exerciseSelectEditHandler = id => {\r\n    setSelectedExerciseId(id);\r\n  };\r\n\r\n  const onEditHandler = exercise => {\r\n    // get all exercises NOT being edited\r\n    const exercisesNotBeingEdited = allExercises.filter(ex => {\r\n      return ex.id !== exercise.id;\r\n    });\r\n\r\n    // append the newly edited exercise to the set\r\n    // i.e. adding new edited item\r\n    setAllExercises([...exercisesNotBeingEdited, exercise]);\r\n  };\r\n\r\n  const formattedExerciseList = formattedExercises(allExercises);\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <Header muscles={muscles} onCreateExercise={onCreateExerciseHandler} />\r\n      <Exercises\r\n        muscles={muscles}\r\n        onDelete={deleteExerciseHandler}\r\n        onEditSelect={exerciseSelectEditHandler}\r\n        onEdit={onEditHandler}\r\n        onCreate={onCreateExerciseHandler}\r\n        exercise={selectedExerciseId ? getExercise(selectedExerciseId) : {}}\r\n        onSelect={setSelectedExerciseId}\r\n        category={selectedCategory}\r\n        exercises={formattedExerciseList}\r\n      />\r\n\r\n      <Footer\r\n        muscles={muscles}\r\n        category={selectedCategory}\r\n        onSelect={setSelectedCategory}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(app);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { indigo, blue } from \"@material-ui/core/colors\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: blue\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <MuiThemeProvider theme={theme}>\r\n    <App />\r\n  </MuiThemeProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}